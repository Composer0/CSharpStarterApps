@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model CSharpStarterApps.Models.FizzBuzz

<div class="container col-xxl-8 px-4 py-5 mt-5">
    <div class="row gy-2 h-100 row-cols-md-2 row-cols-1">
        <div class="col border-2 border-end">
            <h1 class="font-weight-bold 1h-1 mb-3">FizzBuzz</h1>
            <h4 class="lead">
                This application will consider the two numbers entered and for                      each number between 1 and 1--. 
                 It will print FIZZ for the numbers that are divisible by the                       first number. 
                 Buzz will be printed for the numbers divisible by the second                       number. 
                 FIZZBUZZ for the numbers divisible by both and simply print the                    number if it is not divisible by either.
            </h4>

            <h2 class="mt-5 border-bottom border-2">Instructions</h2>
            <p>
                Enter 2 numbers. The first number will be used to evaluate Fizz. 
                The second number will be used to evaluate Buzz and FizzBuzz will                   be determined based on the combination of the two numbers.
            </p>
        </div>
        <div class="col">
            <div>
                <h5>Enter numbers</h5>

                @*Form*@
                <form asp-controller="Fizzbuzz" asp-actions="FizzBuzzView" method="post">
                    <div class="form-group">
                        <label asp-for="FizzValue">Fizz Value</label>
                        <input 
                            type="number" 
                            asp-for="FizzValue" 
                            class="form-control" 
                            placeholder="Enter Fizz" 
                            value="@Model.FizzValue" />
                    </div>
                    <div class="form-group">
                        <label asp-for="BuzzValue">Buzz Value</label>
                        <input 
                            type="number" 
                            asp-for="BuzzValue" 
                            class="form-control" 
                            placeholder="Enter Fizz" 
                            value="@Model.BuzzValue" />
                    </div>
                    <button type="submit" class="btn-cfOrange">Submit</button>
                </form>


                <h2 class="mt-5 border-bottom border-2">Results</h2>
                <div class="table-responsive">

                @*Table*@
                @if (Model.Result.Count > 0)
                {
                    <table class="table-striped table-hover table table-dark">
                        <thread>
                            <tr><th colspan="5">Fizz Buzz Results</th></tr>
                        </thread>
                        @for (int i = 0; i < Model.Result.Count(); i+= 5)
                        {
                            <tr>
                                <td data-color-code="@(Model.Result[i].ToString().ToLower())">@Model.Result[i]</td>
                                <td data-color-code="@(Model.Result[i + 1].ToString().ToLower())">@Model.Result[i+1]</td>
                                <td data-color-code="@(Model.Result[i + 2].ToString().ToLower())">@Model.Result[i+2]</td>
                                <td data-color-code="@(Model.Result[i + 3].ToString().ToLower())">@Model.Result[i+3]</td>
                                <td data-color-code="@(Model.Result[i + 4].ToString().ToLower())">@Model.Result[i+4]</td>
                            </tr>
                        }      
                    </table>
                }
                      @*The purpose of this for loop is to create a table of data. Notice that                        the loop increments by 5. It will add a new row to display the next 5                           items of the generated result.*@
                      @*Brackets must surround the what is being manipulated from the control statement in order to run the logic of the application as intended. *@
                </div>
            </div>
        </div>
    </div>
</div>
